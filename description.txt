Keti Language
By Ori Roth

Background:
This is an object oriented version of Micro Lisp. The language is very dynamic, easy to learn and fun. I am a Software
Engineering student at the Technion, Israel. This project was done at the summer of 2015.

Micro Lisp Style:
Both languages share the same base values, which are: positive integers, strings, true, false and cons (tuple of two
other base values).
See also: http://webcourse.cs.technion.ac.il/234319/Spring2015/ho/WCFiles/_article-3-+-values-and-types.pdf

What is in the files:
* mainloop: contains the main function, which has the main game loop that waits for input, translate and process it and
show the result on screen (or error).
* system: has two main, important parts: the function responsible on the recursive execution of expression, and the
implementation of the base functions.
* memmanage: deals with memory management. Supports allocation of cons, and the mark-sweep algorithm.
* bitarray: supplies us with bit array, makros supporters.

Structure:
The language implementation is built from three main parts: memory management (memmanage), expressions execution (system)
and the interpreter. We will now cover the techniques used in each level of the language.

Memory Management:
All the systems components are represented as cons (see below), thus we support only cons and strings allocation and
garbage collection. The cons and string handlers pools are 2^14  in size. 
